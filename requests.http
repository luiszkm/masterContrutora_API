###
# @name Variáveis Globais
# Estas variáveis serão preenchidas dinamicamente ao executar as requisições em ordem.
@hostname = http://localhost:8080
@token =
@obraId =ddeebb3e-56ef-4b50-b4b2-cf4df6c8edc2
@etapaId =991fc27a-d1b4-4340-8e45-d3a851dc3408
@funcionarioId =86b55e37-9631-4bec-9c65-84cff24f214d
@fornecedorId = b897fce2-551d-4ce1-9b66-f12548eea6c3
@materialId = 011be798-3f83-4080-b027-67101f759364
@materialId2 = 290d8e9e-10db-4d10-b738-510555c937d4

@orcamentoId = 57e52f03-cb2c-462c-81ba-95a5cf3e88ec


# ===================================================================
# [FLUXO 1] - AUTENTICAÇÃO
# ===================================================================

###
# @name Registrar
# 1. Registra um novo usuário administrador.
POST {{hostname}}/usuarios/registrar
Content-Type: application/json

{
    "nome": "Admin Geral",
    "email": "admin@construtora.com",
    "senha": "senha_forte_123",
    "confirmarSenha": "senha_forte_123"
}

###
# @name Login
# 2. Faz o login para obter o token de acesso (JWT).
# O token retornado no corpo JSON será capturado na variável 'token'.
POST {{hostname}}/usuarios/login
Content-Type: application/json

{
    "email": "admin@construtora.com",
    "senha": "senha_forte_123"
}

> {%
    client.global.set("token", response.body.accessToken);
%}

###
# ===================================================================
# [FLUXO 2] - OBRAS (ROTAS PROTEGIDAS)
# Note que agora todas as rotas usam o cabeçalho 'Cookie'.
# ===================================================================

###
# @name CriarObra
# 3. Cria uma nova obra usando o token.
# O ID da obra criada será capturado na variável 'obraId'.
POST {{hostname}}/obras
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Residencial Jardins (Teste)",
    "cliente": "Cliente de Teste",
    "endereco": "Rua dos Testes, 123",
    "dataInicio": "2025-10-01"
}

> {%
    client.global.set("obraId", response.body.ID);
%}

###
# @name ListarTodasAsObras
# 4. Lista todas as obras cadastradas.
GET {{hostname}}/obras
Cookie: jwt-token={{token}}

###
# @name BuscarDashboard
# 5. Busca o dashboard da obra que acabamos de criar.
GET {{hostname}}/obras/{{obraId}}
Cookie: jwt-token={{token}}

###
# ===================================================================
# [FLUXO 3] - ETAPAS (ROTAS PROTEGIDAS)
# ===================================================================

###
# @name AdicionarEtapa
# 6. Adiciona uma etapa à obra criada.
# O ID da etapa criada será capturado na variável 'etapaId'.
POST {{hostname}}/obras/{{obraId}}/etapas
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Fundações e Alicerce",
    "dataInicioPrevista": "2025-10-05",
    "dataFimPrevista": "2025-10-30"
}

> {%
    client.global.set("etapaId", response.body.ID);
%}


###
# @name AtualizarStatusEtapa
# 7. Atualiza o status da etapa que acabamos de criar.
PATCH {{hostname}}/obras/{{obraId}}/etapas/{{etapaId}}
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "status": "Concluída"
}

###
# ===================================================================
# [FLUXO 4] - PESSOAL E ALOCAÇÕES (ROTAS PROTEGIDAS)
# ===================================================================

###
# @name CadastrarFuncionario
# 8. Cadastra um novo funcionário para poder alocá-lo.
# O ID do funcionário será capturado na variável 'funcionarioId'.
POST {{hostname}}/funcionarios
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "João da Silva",
    "cpf": "111.222.333-44",
    "cargo": "Engenheiro Civil",
    "salario": 9500.00,
    "diaria": 75.00
}

> {%
    client.global.set("funcionarioId", response.body.ID);
%}

###
# @name AlocarFuncionario
# 9. Aloca o funcionário na nossa obra.
POST {{hostname}}/obras/{{obraId}}/alocacoes
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "funcionarioId": "{{funcionarioId}}",
    "dataInicioAlocacao": "2025-10-05"
}

###
# ===================================================================
# [FLUXO 5] - SUPRIMENTOS (ROTAS PROTEGIDAS)
# ===================================================================

###
# @name CadastrarFornecedor
# 10. Cadastra um novo fornecedor.
POST {{hostname}}/fornecedores
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Casa do Construtor Center",
    "cnpj": "12.345.678/0001-99",
    "categoria": "Materiais Básicos",
    "contato": "Carlos Andrade",
    "email": "comercial@casadoconstrutor.com"
}

###
# @name ListarFornecedores
# 11. Lista todos os fornecedores.
GET {{hostname}}/fornecedores
Cookie: jwt-token={{token}}

###
# @name CadastrarMaterial
# 12. Cadastra um novo material.
POST {{hostname}}/materiais
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Cimento Portland CP II 50kg",
    "descricao": "Cimento para uso geral em concretos e argamassas.",
    "unidadeDeMedida": "un",
    "categoria": "Estrutural"
}

###
# @name ListarMateriais
# 13. Lista todos os materiais.
GET {{hostname}}/materiais
Cookie: jwt-token={{token}}


###
# ===================================================================
# [FLUXO 6] - ORÇAMENTOS (CONECTANDO TUDO)
# ===================================================================

###
# @name CriarOrcamento
# 1. Cria um novo orçamento para uma etapa específica de uma obra.
# Esta requisição utiliza os IDs capturados nos fluxos anteriores.
POST {{hostname}}/etapas/{{etapaId}}/orcamentos
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "numero": "ORC-2025-004",
    "fornecedorId": "{{fornecedorId}}",
    "itens": [
        {
            "materialId": "{{materialId}}",
            "quantidade": 150,
            "valorUnitario": 55.75
        },
        {
            "materialId": "{{materialId2}}",
            "quantidade": 80,
            "valorUnitario": 120.50
        }
    ]
}

> {%
    client.global.set("orcamentoId", response.body.ID);
%}

###
# @name VerificarDashboardFinanceiro
# 2. Busca o dashboard da obra novamente.
# Agora, os campos financeiros (orcamentoTotalAprovado, etc.) devem
# estar com valores reais, calculados a partir do orçamento que criamos.
GET {{hostname}}/obras/{{obraId}}
Cookie: jwt-token={{token}}

###
# @name AtualizarStatusOrcamento
# Atualiza o status de um orçamento para 'Aprovado' ou 'Pago'.
# Use o {{orcamentoId}} capturado na criação.
PATCH {{hostname}}/orcamentos/{{orcamentoId}}
Content-Type: application/json

{
    "status": "Aprovado"
}