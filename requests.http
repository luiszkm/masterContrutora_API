###
# @name Variáveis Globais
# Estas variáveis serão preenchidas dinamicamente ao executar as requisições em ordem.
@hostname = http://localhost:8080
@token =
@obraId =
@etapaId =
@funcionarioId =2710c033-a566-4451-a66e-6b90b338aed8
@funcionarioParaDeletarId =
@fornecedorId =
@materialId =
@materialId2 =
@orcamentoId =
@apontamentoId =  # Será preenchido após a criação do apontamento


# ===================================================================
# [FLUXO 1] - AUTENTICAÇÃO E SETUP INICIAL
# ===================================================================

###
# @name Registrar
# 1. Registra um novo usuário administrador.
POST {{hostname}}/usuarios/registrar
Content-Type: application/json

{
    "nome": "Admin Geral",
    "email": "admin@construtora.com",
    "senha": "senha_forte_123",
    "confirmarSenha": "senha_forte_123"
}

###
# @name Login
# 2. Faz o login para obter o token que será usado nos cookies.
POST {{hostname}}/usuarios/login
Content-Type: application/json

{
    "email": "admin@construtora.com",
    "senha": "senha_forte_123"
}

> {%
    client.global.set("token", response.body.accessToken);
%}


###
# @name CadastrarFuncionarioPrincipal
# 3. Cadastra o funcionário principal que será usado nos testes.
POST {{hostname}}/funcionarios
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "João da Silva (Eng. Chefe)",
    "cpf": "111.222.313-11",
    "cargo": "Engenheiro Civil",
    "departamento": "Construção Civil",
    "diaria" : 100.00
}

> {%
    client.global.set("funcionarioId", response.body.ID);
%}

### @name BuscarFuncionarios
# 4.1. Busca todos os funcionários cadastrados.
GET {{hostname}}/funcionarios
Cookie: jwt-token={{token}}

# ===================================================================
### 4.2 Buscar Funcionário Específico
GET {{hostname}}/funcionarios/{{funcionarioId}}
Cookie: jwt-token={{token}}

# ===================================================================
## 4.3 Deletar Funcionário  
### @name DeletarFuncionario

DELETE {{hostname}}/funcionarios/{{funcionarioId}}
Content-Type: application/json
Cookie: jwt-token={{token}}

# ===================================================================
### 4.4 Atualizar Funcionário

PUT  {{hostname}}/funcionarios/{{funcionarioId}}
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "João da Silva (Eng. Chefe Atualizado)",
    "cpf": "111.222.333-41",
    "cargo": "Engenheiro Civil",
    "departamento": "Construção Civil",
    "diaria" : 120.00
}

###
# @name CadastrarFornecedorPrincipal
# 4. Cadastra o fornecedor principal.
POST {{hostname}}/fornecedores
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Casa do Construtor Center",
    "cnpj": "12.345.678/0001-19",
    "categoria": "Materiais Básicos",
    "contato": "Carlos Andrade",
    "email": "comercial@casadoconstrutor.com"
}
> {%
    client.global.set("fornecedorId", response.body.ID);
%}

###
# @name CadastrarMaterial1
# 5. Cadastra o primeiro material.
POST {{hostname}}/materiais
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Cimento Portland CP II 50kg",
    "descricao": "Cimento para uso geral.",
    "unidadeDeMedida": "saco",
    "categoria": "Estrutural"
}
> {%
    client.global.set("materialId", response.body.ID);
%}


###
# @name CadastrarMaterial2
# 6. Cadastra o segundo material.
POST {{hostname}}/materiais
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Vergalhão de Aço CA-50 10mm",
    "descricao": "Barra de aço para armaduras de concreto.",
    "unidadeDeMedida": "barra",
    "categoria": "Estrutural"
}
> {%
    client.global.set("materialId2", response.body.ID);
%}

# ===================================================================
# [FLUXO 2] - CENÁRIO DE UMA OBRA COMPLETA
# ===================================================================

###
# @name CriarObraPrincipal
# 7. Cria a obra principal para os testes.
POST {{hostname}}/obras
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Residencial Vista Verde",
    "cliente": "Incorporadora Morar Bem",
    "endereco": "Rua das Palmeiras, 100",
    "dataInicio": "2025-08-01"
}

> {%
    client.global.set("obraId", response.body.ID);
%}

###
# @name AdicionarEtapaPrincipal
# 8. Adiciona uma etapa à obra.
POST {{hostname}}/obras/{{obraId}}/etapas
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Fundações",
    "dataInicioPrevista": "2025-08-05",
    "dataFimPrevista": "2025-08-30"
}

> {%
    client.global.set("etapaId", response.body.ID);
%}

###
# @name AlocarFuncionarioPrincipal
# 9. Aloca o funcionário principal na obra.
POST {{hostname}}/obras/{{obraId}}/alocacoes
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "funcionarioId": "{{funcionarioId}}",
    "dataInicioAlocacao": "2025-08-05"
}

###
# @name CriarOrcamentoPrincipal
# 10. Cria um orçamento para a etapa.
POST {{hostname}}/etapas/{{etapaId}}/orcamentos
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "fornecedorId": "{{fornecedorId}}",
    "itens": [
        { "materialId": "{{materialId}}", "quantidade": 200, "valorUnitario": 55.75 },
        { "materialId": "{{materialId2}}", "quantidade": 150, "valorUnitario": 120.50 }
    ]
}
> {%
    client.global.set("orcamentoId", response.body.ID);
%}

###
# @name AprovarOrcamento
# 11. Aprova o orçamento criado.
PATCH {{hostname}}/orcamentos/{{orcamentoId}}
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "status": "Aprovado"
}

###
# @name RegistrarPagamentoFuncionario
# 12. Registra um pagamento para o funcionário nesta obra.
POST {{hostname}}/pagamentos
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "funcionarioId": "{{funcionarioId}}",
    "obraId": "{{obraId}}",
    "periodoReferencia": "Agosto/2025",
    "valorCalculado": 7500.00,
    "contaBancariaId": "b47a0631-9252-421c-9e27-378393589767"
}

###
# @name VerificarDashboardCompleto
# 13. VERIFICAÇÃO FINAL: Busca o dashboard completo.
# Todos os campos devem estar preenchidos com dados reais.
GET {{hostname}}/obras/{{obraId}}
Cookie: jwt-token={{token}}


# ===================================================================
# [FLUXO 3] - TESTANDO LISTAGENS
# ===================================================================

###
# @name ListarTodasAsObras
GET {{hostname}}/obras
Cookie: jwt-token={{token}}

###
# @name ListarTodosOsFuncionarios
GET {{hostname}}/funcionarios
Cookie: jwt-token={{token}}


# ===================================================================
# [FLUXO 4] - TESTANDO EXCLUSÃO (DELETE)
# ===================================================================

###
# @name CadastrarFuncionarioParaDeletar
# Cria um funcionário que não será alocado.
POST {{hostname}}/funcionarios
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "nome": "Mariana Costa (a ser deletada)",
    "cpf": "444.555.666-77",
    "cargo": "Arquiteta",
    "salario": 8000.00,
    "diaria": 70.00
}
> {%
    client.global.set("funcionarioParaDeletarId", response.body.ID);
%}

###
# @name DeletarFuncionarioComSucesso
# Tenta deletar a funcionária não alocada (deve funcionar, 204 No Content).
DELETE {{hostname}}/funcionarios/{{funcionarioParaDeletarId}}
Cookie: jwt-token={{token}}

###
# @name TentarDeletarFuncionarioAlocado
# Tenta deletar o funcionário principal, que está alocado (deve falhar, 409 Conflict).
DELETE {{hostname}}/funcionarios/{{funcionarioId}}
Cookie: jwt-token={{token}}


###
# @name CriarApontamento
# Cria um novo apontamento para um funcionário em uma obra.
POST {{hostname}}/apontamentos
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "funcionarioId": "{{funcionarioId}}",
    "obraId": "{{obraId}}",
    "periodoInicio": "2025-06-01",
    "periodoFim": "2025-06-15"
}
###
# @name AprovarApontamento
# Aprova o apontamento criado acima.
# A resposta deve mostrar o status: "APROVADO_PARA_PAGAMENTO"
PATCH {{hostname}}/apontamentos/{{apontamentoId}}/aprovar
Cookie: jwt-token={{token}}

###
# @name RegistrarPagamentoApontamento
# Paga o apontamento previamente aprovado.
# A resposta deve mostrar o status: "PAGO"
# E um evento será disparado para o contexto Financeiro.
PATCH {{hostname}}/apontamentos/{{apontamentoId}}/pagar
Content-Type: application/json
Cookie: jwt-token={{token}}

{
    "contaBancariaId": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
}